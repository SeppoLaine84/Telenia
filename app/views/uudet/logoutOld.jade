extends ../layout
block content	
	#page-wrapper.gray-bg
		.row.wrapper.border-bottom.white-bg.page-heading
			h1
				i.fa.fa-spinner.fa-pulse.fa-fw.page-title-icon
				span.page-title= loadingText
						
		.wrapper-content
			.row
				#main-content.col-xs-12.gray-bg.animated.bounceInRight
					.ibox#logout-container(style='display:none')
						.ibox-title: h1 Kirjaudu ulos
						.ibox-content
							p Täytäthän vielä ylös työpäivääsi käytetyt tunnit.
							hr
							#reports
								include users/report
							h4 Soittoja 
								strong.badge.total-calls 0
								|  kappaletta
							h4.reward Palkkio yhteensä 
								strong.money-total 0.00€
							button.btn.btn-success.disabled.save-report
								i.fa.fa-save
								|  Tallenna ja kirjaudu ulos
block content-scripts
	- if(palkkaTyyppi == 2){ user.palkka.tuntipalkka = 0; }
	script.
		var totalCalls 		= 0;
		var daysLeft 		= 0;
		var moneyTot		= 0;
		var palkkaTyyppi 	= #{user.palkka.palkkaTyyppi};
		var provisioEnabled = #{user.palkka.provisioEnabled};
		var palkkaTyypit 	= [
			"empty",
			"Tuntipalkka",
			"Kk-palkka",
		];
		var user = !{JSON.stringify(user)}
		console.log(palkkaTyypit[palkkaTyyppi])
		
		$.ajax({
			type:"POST",
			dataType:"json",
			url:"/user/report",
			success: function(reportData){
				days 		= Object.keys( reportData );
				daysLeft 	= days.length;
				if(daysLeft == 0)
					document.location.href = "/user/logout";
				else {
					days.reverse();
					days.forEach(function(reportDay){	// Luodaan joka päivälle oma table
						luoKuittausTable(reportData, reportDay);
					});
				}
			}
		});
		
		$(".logout").addClass("inactive");
		
		$(".logout.inactive").off("click").on("click", function(e){
			e.preventDefault();
			toastr["warning"]("Täytä tunnit ja paina 'Tallenna ja kirjaudu ulos'-nappulaa", "Ohje!");
		});
		
		function luoKuittausTable(reportData, reportDay){
			var $table = $("#kuittaus-template").clone();
			$table.attr("id", "#kuittaus-"+reportDay.replace(/\./g, "-"));
			
			$table.find("#kuittaus-date").text(reportDay);
			$table.removeClass("hidden");
			$table.addClass("kuittaus-day");
			$table.appendTo($("#reports"));
		
			var kampanjat 	= _.groupBy(reportData[reportDay], "kampanjaID");
			var ids 		= Object.keys(kampanjat);
			var left 		= ids.length;
			
			ids.reverse();
			ids.forEach(function(id){
				var kampanja = kampanjat[id];
				var $row = $table.find(".row-template").clone();		
				$row.attr("id", "kuittaus-row-"+id);
				$row.data("_id", id);
				$row.data("date", reportDay);
				$row.data("dateobj", kampanja[0].aika);
				$row.find(".tunnit").removeClass("template")
				$row.removeClass("row-template");
				$row.removeClass("hidden");
				$row.prependTo($table.find("tbody"));
				
				$.ajax({
					type:"POST",
					url:"/campaign/name",
					data:{
						id:id
					},
					dataType:"json",
					success:function(row){
						console.log(row);
						var $_row = $table.find("#kuittaus-row-"+row._id);
						totalCalls += kampanja.length;
						
						$_row.find(".campaign-name").text(row.nimi);
						var statuses 	= _.groupBy(kampanja, "data"); // Jaottele statuksien mukaan
						var statusNames = Object.keys(statuses); 
					
						statusNames.forEach(function(status){
							if(status.length > 0){
								var count = statuses[status].length;
								
								$_row.find("."+status.toLowerCase()).text(count);
							}
						});
						
						var h = $_row.find(".ok").text()
						
						if(Number.isInteger(parseFloat(h)))
							h = parseFloat(h);
						
						if(provisioEnabled && kampanja.length > 0){
							$_row.data("provisio", row.provisio.replace("\,", ".") || 0.00);
							$_row.find(".money-prov").text(parseFloat((h* row.provisio || 0.00 )).toFixed(2)+"€");
						}
						else {
							row.provisio = 0.00;
						}
						left--;
						if(left == 0){
						
							var table = $_row.closest("table");
							var ok=0,ei=0,ev=0,su = 0,tj=0,v=0,tunnit = 0;
						
							$(table).find(".ok").toArray().forEach(function(oks){
									ok += parseFloat($(oks).text());
							});
							
							$(table).find(".ei").toArray().forEach(function(oks){
								ei += parseFloat($(oks).text());
							});
							
							$(table).find(".ev").toArray().forEach(function(oks){
								ev += parseFloat($(oks).text());
							});
							
							$(table).find(".su").toArray().forEach(function(oks){
								su += parseFloat($(oks).text());
							});
							
							$(table).find(".tj").toArray().forEach(function(oks){
								tj += parseFloat($(oks).text());
							});
							
							$(table).find(".v").toArray().forEach(function(oks){
								v += parseFloat($(oks).text());
							});
							
							$(table).find(".ok-total").text(ok);
							$(table).find(".ei-total").text(ei);
							$(table).find(".ev-total").text(ev);
							$(table).find(".su-total").text(su);
							$(table).find(".tj-total").text(tj);
							$(table).find(".v-total").text(v);
							
							var tot = parseFloat(parseFloat($(table).closest(".kuittaus-day").find(".ok-total").text()) * row.provisio).toFixed(2);
						
							$(table).closest(".kuittaus-day").find(".money-total").text(tot+"€");
						
							if(tot > 0)
								$(table).closest(".kuittaus-day").find(".reward").fadeIn();
							else
								$(table).closest(".kuittaus-day").find(".reward").fadeOut();
							
							var moneyProvTotal = 0.00;
							$(table).find(".money-prov").toArray().forEach(function(h){
								var _h = parseFloat($(h).text())
								if(!Number.isNaN(_h))
									moneyProvTotal += (_h);
							});
							$(table).find(".money-prov-total").text(parseFloat(moneyProvTotal).toFixed(2)+"€");
						
							daysLeft--;
							if(daysLeft == 0){
								
								$(".total-calls").text(totalCalls);
								$(".money-total").text(calculateTotalMoney("#reports")+"€");
								validButton();
								$("#logout-container").slideDown();
							}
									
							$(table).find(".tunnit").not(".template").on("keydown", function(e){
								if((e.which  >= 48 && e.which  <= 57) || e.which  == 188 ||e.which  == 190 ||e.which  == 9||e.which  == 8)
									return true;
								else {
									e.preventDefault();
									return false;
								}
							});
							
							$(table).find(".tunnit").not(".template").off("focus").on("focus", function(){ $(this).val("");	});
							
							$(table).find(".tunnit").not(".template").off("blur").on("blur", function(){
								var elem 	= this;
								var v 		= $(this).val($(this).val().replace(/\,/g, "."))
								var h 		= parseFloat(v)
								
								if(!Number.isNaN(h) && $(this).val().length > 0){
									calucalteRow(elem);
									validButton();
								}
								else {
									calucalteRow(elem);
									$(elem).closest("tr").find(".money-hour").text("");
									validButton();
								}
							});
						}
					}
				});
			})
		}
		
		function calucalteRow(rowElement) {
		
			tunnit 			= 0.0;
			moneyProvTotal 	= 0.00;
			moneyHourTotal 	= 0.00;
			var table 		= $(rowElement).closest(".kuittaus-day");
			
			$(table).find(".tunnit").toArray().forEach(function(h){
				var h = $(h).val().replace(/\,/g, ".");
				if(!Number.isNaN(parseFloat(h))){
					var floatti = parseFloat(h);
					tunnit += floatti;
				}
			});
		
			var rowOK 		= parseFloat($(rowElement).parent().parent().find(".ok").text());
			var rowTunnit	= parseFloat($(rowElement).val());
			
			var provisio 	= rowOK *  $(rowElement).closest("tr").data().provisio;
			var tunti 		= 0.00;
			if(user.palkka.palkkaTyyppi == 1)
				parseFloat((parseFloat(rowTunnit) * parseFloat(user.palkka.tuntipalkka.replace("\,", ".") || 0.00)));
			var palkka 		= tunti + provisio;
			
			$(rowElement).closest("tr").find(".money-hour").text(parseFloat(tunti).toFixed(2) + "€");
			$(table).find(".tunnit-total").text(tunnit.toFixed(2));
			
			$(table).find(".money-hour").toArray().forEach(function(h){
				var _h = parseFloat($(h).text().replace(/\,/g, "."))
				if(!Number.isNaN(_h))
					moneyHourTotal += (_h);
			});
			
			$(table).find(".money-prov").toArray().forEach(function(h){
				var _h = ($(h).text().replace(/\,/g, "."))
				if(!Number.isNaN(parseFloat(_h)))
					moneyProvTotal += (_h);
			});
		
			$(table).find(".money-hour-total").text(parseFloat(moneyHourTotal).toFixed(2)+"€");
			$(table).find(".money-prov-total").text(parseFloat(moneyProvTotal).toFixed(2)+"€");
			$(".money-total").text(calculateTotalMoney("#reports")+"€");
		}
		
		function calculateTotalMoney(element) {
			var $elem = $(element);
			var money = 0.00;
			$elem.find(".money-hour, .money-prov").toArray().forEach(function(e){
				var t = parseFloat($(e).text())
				if(!Number.isNaN(t))
					money += t;
			})
			return money.toFixed(2);
		}
		
		
		function calculateStatuses(element) {
			var statuses 	= {};
			$(element).find(".statuss").toArray().forEach(function(status){
				var t 		= $(status).data("status");
				var text 	= $(status).text();
				statuses[t] = parseFloat(text);
			});
			return statuses;
		}
		
		// Validoi raportin
		function validateReport(element){
			var $elem = $(element);
			var valid = true;
			$elem.find(".kuittaus-row").not(".row-template").find(".editable.tunnit").toArray().forEach(function(e){
				var val = $(e).val().replace(/\,/g, ".");
				if(Number.isNaN(parseFloat(val)))					
					valid = false;
			});
			return valid;
		}
		
		// Avaa tallennus buttonin raportin validaation mukaan
		function validButton(){
			var valid = validateReport("#reports");
			if(valid === true){
				$(".save-report").removeClass("disabled");
			}
			else{
				$(".save-report").addClass("disabled");
			}
		}
		
		$(".save-report").on("click", function(){
			if(!$(this).hasClass("disabled")){
				$(this).addClass("disabled");
				$(this).prop("disabled", true);
				$(this).html("Tallenetaan raporttia, tässä voi kestää hetki..<i class='fa fa-fw fa-spin fa-spinner pull-left></i>")
				var rows 	= $(".kuittaus-row").not(".row-template").toArray();
				var datas 	= [];
				rows.forEach(function(row){
					var campaignName 	= $(row).find(".campaign-name").text();
					var rowStatuses 	= calculateStatuses(row);
					var tunnit			= parseFloat($(row).find(".tunnit").val().replace(/\,/g, "."));
					var hour			= parseFloat($(row).find(".money-hour").text().replace(/\,/g, "."));
					var prov			= parseFloat($(row).find(".money-prov").text().replace(/\,/g, "."));
					var _d 				= $(row).data("dateobj")

					var data = {
						kampanjaID:		$(row).data("_id"),
						date:			$(row).data("date"),
						campaignName: 	campaignName,
						statuses:		rowStatuses,
						tunnit:			tunnit,
						tuntipalkka:	hour,
						provisiopalkka: prov,
						aika: 			_d
					};
					datas.push(data);
				});
						
				$.ajax({
					url:		"/report/save",
					type:		"POST",
					dataType:	"json",
					data: 		{data:JSON.stringify(datas)},
					success: function(response){
						swal({
							title: "Uloskirjautuminen",
							text: "Haluatko kirjautua ulos?",
							type: "info",
							showCancelButton: true,
							confirmButtonColor: "#89b54a",
							confirmButtonText: "Kyllä",
							cancelButtonText: "Etusivulle",
						
						}).then(function (isConfirm) {
								document.location ="/user/logout";	
						},function(){
								document.location ="/aloitus";	
							});
						},
					
					});
			}
			else {
				$(".kuittaus-row .editable.tunnit").toArray().forEach(function(elem){
					var val = $(elem).val();
					if(val == "TÄYTÄ"){
						$(elem).addClass("has-error")
					}else if(isNaN(val)) {
						$(elem).val("TÄYTÄ");
						$(elem).addClass("has-error")
					}else
						$(elem).removeClass("has-error")
				});
				toastr["warning"]("Täytä ensin kaikki tunnit!", "Ohje!");
				var $firstElem = $(".editable.tunnit.has-error").not(".template").first();
				
				$(window).scrollTo( $firstElem , 300, {offset:{top:-30}});
			}
		});